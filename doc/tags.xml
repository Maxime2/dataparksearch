<sect1 id="tags">
	<title>Tags</title>
<indexterm><primary>Tags</primary></indexterm>
	<para>Tag is a special parameter which can be given for a set
of documents. The main purpose of tags is to join a number of
documents into one group and then while doing search to select a group
of documents to search through. </para>

<indexterm><primary>Command</primary><secondary>Tag</secondary></indexterm>
	<para>You should use <command>Tag</command> command of
<filename>indexer.conf</filename> to assign some tag value for a server
or server subset by putting it before corresponding <command>Server/Realm/Subnet</command> command. While doing search you can specify tag value to
search through documents which tag matches given parameter with
<parameter>t=xxx</parameter> parameter, which can be passed from HTML
form. Take a look into <xref linkend="tag_cmd"/>, <filename>indexer.conf-dist</filename> and
<filename>search.htm-dist</filename> for explanation and
examples.</para>

<note><para>For dbmode cache you need to have the following section defined in your
<filename>sections.conf</filename> file:
<programlisting>
Section tag 0 64
</programlisting>
in overall you need to have the section 'tag' defined with non-zero maximum length.
</para>
</note>


<sect2 id="tag_cmd">
<title><command>Tag</command> command</title>
<indexterm><primary>Command</primary><secondary>Tag</secondary></indexterm>
<programlisting>
Tag &lt;string&gt;
</programlisting>
<para>
Use this field for your own purposes. For example for grouping
some servers into one group, etc... During search you'll be able to
limit URLs to be searched through by their tags.
Can be set multiple times before <command>Server</command> command and
takes effect till the end of config file or till next <command>Tag</command> command.
Default values is an empty string.
</para>
</sect2>


<sect2 id="tagif_cmd">
<title><command>TagIf</command> command</title>
<indexterm><primary>Command</primary><secondary>TagIf</secondary></indexterm>
<programlisting>
TagIf &lt;tag&gt; [Match|NoMatch] [NoCase|Case] [String|Regex] [loose] &lt;section&gt; &lt;arg&gt; [&lt;arg&gt; ... ]
</programlisting>
<para>
Mark document by &lt;tag&gt; tag, if the value of <option>section</option> match the <option>arg</option> pattern given.
The meaning of first three optional parameters are exactly the same
as for the <command>Allow</command> command (see <xref linkend="allow_cmd"/>). Optional parameter <option>loose</option> specify
to do not override the tag value if it has been already set from server parameters.
</para>
<para>Example
<programlisting>
TagIf Docs regex Title Manual
</programlisting>
</para>

<para>You can use template meta-variables (as for example, $(Title), $(Last-Modified), etc.) in &lt;tag&gt; tag. An example below
shows how to assign hostname from URL as a tag for any document indexed:
<programlisting>
TagIf $(url.host) match url.host *
</programlisting>
</para>

</sect2>


	<sect2 id="tags-sql">
		<title>Tags in SQL version</title>
		<para>Tag type is CHAR. CHAR type allows to use some nice
features. You can use '_' and '%' LIKE wildcards in tag parameter
when doing search. It makes possible that tag, like a category,  does
support an idea of nesting. For example, documents with tag value "AB"
can be found with both "A%" and "AB" tag limits.</para>
		<para>Tags also give a way to make an URL a member of
multiple tag selections. Playing with LIKE wildcards you can easily
create two or more groups.</para>
		<para>For example, tag "ABCDE" is the member of at least these selections:
		<programlisting>
_BCDE
A_CDE
AB_DE
ABC_E
ABCD_
</programlisting>
</para>
		<note>
			<para>If you have big enough database and
often use tag limits, it is useful to create an index by field "tag"
in "server" table. This index is not created by default.
<programlisting>
CREATE INDEX srv_tag ON "server" ("tag");
</programlisting>
</para>
<para>
By default, the length of tag field in url table is limited by 16 characters.
If you need more, increase this length before DB creating.
</para>
		</note>


<note><para>For cache storage mode, you can use SQL's wildcards only with <command>indexer</command>.</para>
</note>


	</sect2>


</sect1>
